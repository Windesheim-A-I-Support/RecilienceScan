# How to use - Extension {#sec-howtouse}

The extension provides a format `titlepage-pdf` where you can specify a variety of themes. [Here are the themes available](index.qmd).

## Install the extension

### Install into new directory

```bash
quarto use template nmfs-opensci/quarto_titlepages
```

This will install the extension in the `_extension` folder plus all the demo files. Essentially, you will be cloning the repo into a new folder and you will be asked at installation for the name of the (empty) folder/directory that you want to install into.

### Install for an existing directory

You may also use this format with an existing Quarto project or document. This will install only the files in the `_extension` folder and will not install the files above that (the demo files).

From the quarto project or document directory, run the following command:

```bash
quarto install extension nmfs-opensci/quarto_titlepages
```

## Usage

In your document yaml add the format and a titlepage theme.

```yaml
format: 
  titlepage-pdf:
    titlepage: great-wave
```

Then render the document. *How?* That depends on the IDE you are using. There should be a render 'button' or drop-down or you can run this command from the shell.

```bash
quarto render article.qmd
```
assuming your qmd file is named `article.qmd`.

## YAML additions for themes

Some themes need some additional YAML information to work.

### `bg-image`

Needs info on the titlepage geometry so the title doesn't overlap the background image. Also you need to supply the background image and where to put it (UL, upperleft; UR, upperright; BL, bottomleft; BR, bottomright). Note, there are placeholders in the extension, but when you put your own image in, you will need to add the YAML information.

```
titlepage: bg-image
titlepage-geometry: 
  - top=3in
  - bottom=1in
  - right=1in
  - left=1in
title-bg-image: "img/corner-bg.png"
title-bg-location: "UL"
title-bg-size: 0.5
```

### `great-wave`

Great wave theme creates a cover page with a background image that fills the width of the page at the bottom with a color above. You need to specify the image and the upper color (unless you want to use the default Great Wave off Kanagawa image).

```
documentclass: scrbook
number-sections: true
title-bg-image: "img/TheGreatWaveoffKanagawa.jpeg"
title-page-color: "F6D5A8"
```


## Document classes

The document class changes the look of your document. For the book document classes, you will need to pass in 

```
number-sections: true
```
in your YAML because Quarto sets `number-sections: false` by default and that will mess up all your equation, figure and table numbers. It simple will not number them correctly at all.

### `scrbook`

The KOMA `scrbook` document class has many options that your can use to change the look of your book. [Read the documentation here](https://ctan.org/pkg/scrbook?lang=en).

If you want chapters to be allowed to start on even or odd pages and the left and right margins on even and odd pages to be the same, use

```
classoption: ["oneside", "open=any"]
```

### `scrartcl`

This document class is more for single documents with sections and the equation, figure and table numbering will be 1, 2, 3, ... as opposed to 1.1, 1.2, etc, with the chapter number included in the number. The default in Quarto is no section or chapter numbers. Use

```yaml
number-sections: true
```

if you want numbers.

### Other classes

The `cls` folder has some other document classes that you can use. Specify by providing the path to the document class file. For example,
```yaml
documentclass: cls/krantz.cls
```

The base TeX document classes are  `article`, `report`, and `book`. But there are many many more available to customize the look of your document. Here is a Stackoverflow post with a few discusssed [here](https://tex.stackexchange.com/questions/782/what-are-the-available-documentclass-types-and-their-uses). 

## Table of contents

You can add a table of contents (`toc: true`), list of figures (`lof: true`) and list of tables (`lot: true`). The depth of the TOC is specified with `toc-depth`. Example:

```
format:
  titlepage-pdf:
    titlepage: bg-image
    documentclass: scrartcl
    toc: true
    toc-depth: 3
    lof: true
    lot: true
```



