---
title: "Supply Chain Resilience Executive Dashboard"
subtitle: "Comprehensive Industry Insights & Benchmarking Analysis"
author:
  - name: Ronald de Boer
    affiliations:
      - name: Supply Chain Finance Lectoraat
      - name: Hogeschool Windesheim
        address: Campus 2, Zwolle
date: "`r format(Sys.Date(), '%B %d, %Y')`"
format:
  pdf:
    documentclass: article
    classoption:
      - fontsize=11pt
      - open=any
      - oneside
    number-sections: false
    toc: false
    lof: false
    lot: false
    geometry:
      - top=20mm
      - bottom=20mm
      - left=20mm
      - right=20mm
    titlepage: bg-image
    titlepage-bg-image: img/corner-bg.png
    titlepage-logo: img/logo-resiliencescan.png
    titlepage-header: "ResilienceScan | NEXT GEN Logistics Initiative"
    titlepage-footer: |
      Supply Chain Finance Lectoraat, Hogeschool Windesheim\
      https://resiliencescan.org/ | https://www.windesheim.com/research/professorships/supply-chain-finance
    coverpage: otter
    coverpage-bg-image: img/otter-bar.jpeg
    coverpage-title: "Executive Insights 2025"
    coverpage-author:
      - Supply Chain Finance Lectoraat, Hogeschool Windesheim
      - NEXT GEN Logistics
    coverpage-theme:
      title-color: white
      title-fontfamily: QTDublinIrish.otf
      title-fontsize: 70
      author-style: plain
      author-sep: newline
      author-fontstyle:
        - textbf
        - textsc
      author-fontsize: 24
      author-color: 4CAF50
      author-align: right
      author-bottom: 1.5in
      footer-style: none
      header-style: none
      date-style: none
    include-in-header:
      text: |
        \usepackage{graphicx}
        \usepackage{float}
        \usepackage{booktabs}
        \usepackage{longtable}
        \usepackage{array}
        \usepackage{multirow}
        \usepackage{wrapfig}
        \usepackage{colortbl}
        \usepackage{pdflscape}
        \usepackage{xcolor}
        \usepackage{fancyhdr}
        \pagestyle{fancy}
        \fancyhead[L]{\small ResilienceScan Executive Dashboard}
        \fancyhead[R]{\small \today}
        \fancyfoot[C]{\thepage}
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, fig.align = 'center')

# Load required packages
required_packages <- c("tidyverse", "knitr", "kableExtra", "ggplot2", "scales",
                       "gridExtra", "reshape2", "viridis", "fmsb", "RColorBrewer")

for (pkg in required_packages) {
  if (!require(pkg, character.only = TRUE, quietly = TRUE)) {
    install.packages(pkg, repos = "https://cloud.r-project.org/")
    library(pkg, character.only = TRUE)
  }
}

# Custom theme for plots
theme_resilience <- function() {
  theme_minimal() +
    theme(
      plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
      plot.subtitle = element_text(size = 10, hjust = 0.5, color = "gray40"),
      axis.title = element_text(size = 10, face = "bold"),
      axis.text = element_text(size = 9),
      legend.position = "bottom",
      legend.title = element_text(size = 10, face = "bold"),
      legend.text = element_text(size = 9),
      panel.grid.minor = element_blank(),
      panel.grid.major = element_line(color = "gray90"),
      plot.background = element_rect(fill = "white", color = NA),
      panel.background = element_rect(fill = "white", color = NA)
    )
}
```

```{r load-data, include=FALSE}
# Load cleaned data
df <- read_csv("data/cleaned_master.csv", show_col_types = FALSE)
colnames(df) <- tolower(trimws(colnames(df)))

# Clean score columns
score_cols <- c("up__r", "up__c", "up__f", "up__v", "up__a",
                "in__r", "in__c", "in__f", "in__v", "in__a",
                "do__r", "do__c", "do__f", "do__v", "do__a")

for (col in score_cols) {
  if (col %in% colnames(df)) {
    df[[col]] <- as.numeric(gsub(",", ".", as.character(df[[col]])))
    df[[col]] <- pmax(0, pmin(5, df[[col]]))
  }
}

# Calculate pillar scores
df$upstream_score <- rowMeans(df[, c("up__r", "up__c", "up__f", "up__v", "up__a")], na.rm = TRUE)
df$internal_score <- rowMeans(df[, c("in__r", "in__c", "in__f", "in__v", "in__a")], na.rm = TRUE)
df$downstream_score <- rowMeans(df[, c("do__r", "do__c", "do__f", "do__v", "do__a")], na.rm = TRUE)
df$overall_score <- rowMeans(df[, c("upstream_score", "internal_score", "downstream_score")], na.rm = TRUE)

# Key statistics
total_respondents <- nrow(df)
total_companies <- n_distinct(df$company_name)
avg_overall_score <- mean(df$overall_score, na.rm = TRUE)
```

\newpage

::: {.content-visible when-format="pdf"}
\begin{center}
\begin{minipage}[t]{0.70\textwidth}
\textbf{\Large ResilienceScan Executive Dashboard}\\
\vspace{0.3cm}
\textbf{Research Period:} 2023-2025\\
\textbf{Total Respondents:} `r total_respondents` professionals\\
\textbf{Participating Organizations:} `r total_companies` companies\\
\textbf{Overall Industry Resilience:} `r sprintf("%.2f", avg_overall_score)`/5.00\\
\vspace{0.2cm}
{\small\textit{NextGenResilience • RUG • Windesheim • Involvation}}
\end{minipage}\hfill
\begin{minipage}[t]{0.26\textwidth}
\raggedleft
\includegraphics[width=0.42\textwidth]{img/logo-resiliencescan.png}\hspace{1mm}
\includegraphics[width=0.42\textwidth]{img/logo-involvation.png}\\[1mm]
\includegraphics[width=0.42\textwidth]{img/logo-RUG.png}\hspace{1mm}
\includegraphics[width=0.42\textwidth]{img/logo-windesheim.png}
\end{minipage}
\end{center}
:::

# Executive Summary

This dashboard presents comprehensive insights from **`r total_respondents` supply chain professionals** across **`r total_companies` organizations** who participated in the ResilienceScan assessment between 2023 and 2025.

## Key Findings

```{r key-metrics, results='asis'}
# Calculate key metrics
high_performers <- sum(df$overall_score >= 4.0, na.rm = TRUE)
high_pct <- (high_performers / total_respondents) * 100

low_performers <- sum(df$overall_score < 2.5, na.rm = TRUE)
low_pct <- (low_performers / total_respondents) * 100

avg_upstream <- mean(df$upstream_score, na.rm = TRUE)
avg_internal <- mean(df$internal_score, na.rm = TRUE)
avg_downstream <- mean(df$downstream_score, na.rm = TRUE)

# Determine strongest and weakest pillar
pillars <- c("Upstream" = avg_upstream, "Internal" = avg_internal, "Downstream" = avg_downstream)
strongest_pillar <- names(which.max(pillars))
weakest_pillar <- names(which.min(pillars))

cat(sprintf("- **Industry Average Resilience:** %.2f/5.00\n", avg_overall_score))
cat(sprintf("- **High Performers (≥4.0):** %d organizations (%.1f%%)\n", high_performers, high_pct))
cat(sprintf("- **Attention Required (<2.5):** %d organizations (%.1f%%)\n", low_performers, low_pct))
cat(sprintf("- **Strongest Pillar:** %s (%.2f/5.00)\n", strongest_pillar, max(pillars)))
cat(sprintf("- **Development Focus:** %s (%.2f/5.00)\n", weakest_pillar, min(pillars)))
```

\newpage

# Industry Resilience Overview

```{r resilience-distribution, fig.width=10, fig.height=6}
# Create overall score distribution
ggplot(df, aes(x = overall_score)) +
  geom_histogram(aes(y = ..density..), bins = 30, fill = "#0277BD", alpha = 0.7, color = "white") +
  geom_density(color = "#e74c3c", size = 1.2) +
  geom_vline(xintercept = avg_overall_score, linetype = "dashed", color = "#2E7D32", size = 1) +
  annotate("text", x = avg_overall_score + 0.3, y = 0.4,
           label = sprintf("Industry Avg:\n%.2f", avg_overall_score),
           color = "#2E7D32", fontface = "bold", size = 4) +
  scale_x_continuous(breaks = seq(0, 5, 0.5), limits = c(0, 5)) +
  labs(
    title = "Supply Chain Resilience Score Distribution",
    subtitle = sprintf("Analysis of %d organizations", total_companies),
    x = "Overall Resilience Score (0-5)",
    y = "Density"
  ) +
  theme_resilience()
```

## Resilience Categories

```{r resilience-categories, fig.width=10, fig.height=5}
# Categorize scores
df$category <- cut(df$overall_score,
                   breaks = c(0, 2.5, 3.0, 3.5, 4.0, 5.0),
                   labels = c("Needs Improvement\n(<2.5)",
                             "Below Average\n(2.5-3.0)",
                             "Average\n(3.0-3.5)",
                             "Good\n(3.5-4.0)",
                             "Excellent\n(≥4.0)"),
                   include.lowest = TRUE)

category_counts <- as.data.frame(table(df$category))
colnames(category_counts) <- c("Category", "Count")
category_counts$Percentage <- (category_counts$Count / sum(category_counts$Count)) * 100

# Color palette
colors <- c("#e74c3c", "#ff8f00", "#FFC107", "#4CAF50", "#2E7D32")

ggplot(category_counts, aes(x = Category, y = Count, fill = Category)) +
  geom_bar(stat = "identity", color = "white", size = 0.5) +
  geom_text(aes(label = sprintf("%d\n(%.1f%%)", Count, Percentage)),
            vjust = -0.3, fontface = "bold", size = 4) +
  scale_fill_manual(values = colors) +
  labs(
    title = "Resilience Performance Categories",
    subtitle = "Distribution across resilience maturity levels",
    x = "Performance Category",
    y = "Number of Organizations"
  ) +
  theme_resilience() +
  theme(legend.position = "none")
```

\newpage

# Pillar Performance Analysis

```{r pillar-comparison, fig.width=10, fig.height=7}
# Prepare pillar data
pillar_data <- data.frame(
  Pillar = c("Upstream", "Internal", "Downstream"),
  Average = c(avg_upstream, avg_internal, avg_downstream),
  SD = c(sd(df$upstream_score, na.rm = TRUE),
         sd(df$internal_score, na.rm = TRUE),
         sd(df$downstream_score, na.rm = TRUE))
)

# Create bar plot with error bars
ggplot(pillar_data, aes(x = Pillar, y = Average, fill = Pillar)) +
  geom_bar(stat = "identity", width = 0.6, color = "white", size = 1) +
  geom_errorbar(aes(ymin = Average - SD, ymax = Average + SD),
                width = 0.2, size = 0.8, color = "gray30") +
  geom_text(aes(label = sprintf("%.2f ± %.2f", Average, SD)),
            vjust = -2, fontface = "bold", size = 5) +
  scale_fill_manual(values = c("#0277BD", "#FF8F00", "#2E7D32")) +
  scale_y_continuous(limits = c(0, 5), breaks = seq(0, 5, 0.5)) +
  labs(
    title = "Supply Chain Resilience by Pillar",
    subtitle = "Average scores with standard deviation (error bars)",
    x = "Supply Chain Pillar",
    y = "Average Resilience Score (0-5)"
  ) +
  theme_resilience() +
  theme(legend.position = "none")
```

## Dimension Breakdown

```{r dimension-heatmap, fig.width=10, fig.height=6}
# Calculate dimension averages
dimension_scores <- data.frame(
  Dimension = rep(c("Redundancy", "Collaboration", "Flexibility", "Visibility", "Agility"), 3),
  Pillar = rep(c("Upstream", "Internal", "Downstream"), each = 5),
  Score = c(
    mean(df$up__r, na.rm = TRUE), mean(df$up__c, na.rm = TRUE),
    mean(df$up__f, na.rm = TRUE), mean(df$up__v, na.rm = TRUE),
    mean(df$up__a, na.rm = TRUE),
    mean(df$in__r, na.rm = TRUE), mean(df$in__c, na.rm = TRUE),
    mean(df$in__f, na.rm = TRUE), mean(df$in__v, na.rm = TRUE),
    mean(df$in__a, na.rm = TRUE),
    mean(df$do__r, na.rm = TRUE), mean(df$do__c, na.rm = TRUE),
    mean(df$do__f, na.rm = TRUE), mean(df$do__v, na.rm = TRUE),
    mean(df$do__a, na.rm = TRUE)
  )
)

# Create heatmap
ggplot(dimension_scores, aes(x = Dimension, y = Pillar, fill = Score)) +
  geom_tile(color = "white", size = 1) +
  geom_text(aes(label = sprintf("%.2f", Score)), color = "white",
            fontface = "bold", size = 5) +
  scale_fill_gradient2(low = "#e74c3c", mid = "#FFC107", high = "#2E7D32",
                       midpoint = 3, limits = c(0, 5), name = "Score") +
  labs(
    title = "Resilience Dimension Heatmap",
    subtitle = "Performance across 5 dimensions and 3 pillars",
    x = "Resilience Dimension",
    y = "Supply Chain Pillar"
  ) +
  theme_resilience() +
  theme(
    axis.text.x = element_text(angle = 0, hjust = 0.5),
    legend.position = "right"
  )
```

\newpage

# Top Performing Organizations

```{r top-performers}
# Get top 10 companies by average score
company_avg <- df %>%
  group_by(company_name) %>%
  summarise(
    Respondents = n(),
    `Overall Score` = mean(overall_score, na.rm = TRUE),
    Upstream = mean(upstream_score, na.rm = TRUE),
    Internal = mean(internal_score, na.rm = TRUE),
    Downstream = mean(downstream_score, na.rm = TRUE)
  ) %>%
  filter(Respondents >= 3) %>%  # Only companies with 3+ respondents
  arrange(desc(`Overall Score`)) %>%
  head(10)

# Format table
kable(company_avg,
      caption = "Top 10 High-Performing Organizations (≥3 respondents)",
      digits = 2,
      col.names = c("Company", "n", "Overall", "Upstream", "Internal", "Downstream"),
      booktabs = TRUE,
      linesep = "") %>%
  kable_styling(latex_options = c("striped", "hold_position"),
                font_size = 9,
                full_width = FALSE) %>%
  column_spec(1, width = "5cm") %>%
  column_spec(2, width = "1cm") %>%
  column_spec(3:6, width = "1.5cm") %>%
  row_spec(0, bold = TRUE, color = "white", background = "#0277BD")
```

# Organizations Requiring Attention

```{r attention-needed}
# Get bottom 10 companies
company_low <- df %>%
  group_by(company_name) %>%
  summarise(
    Respondents = n(),
    `Overall Score` = mean(overall_score, na.rm = TRUE),
    Upstream = mean(upstream_score, na.rm = TRUE),
    Internal = mean(internal_score, na.rm = TRUE),
    Downstream = mean(downstream_score, na.rm = TRUE),
    .groups = 'drop'
  ) %>%
  mutate(
    `Lowest Score` = pmin(Upstream, Internal, Downstream),
    `Weakest Pillar` = case_when(
      Upstream == `Lowest Score` ~ "Upstream",
      Internal == `Lowest Score` ~ "Internal",
      Downstream == `Lowest Score` ~ "Downstream",
      TRUE ~ "Unknown"
    )
  ) %>%
  select(company_name, Respondents, `Overall Score`, `Weakest Pillar`, `Lowest Score`) %>%
  filter(Respondents >= 2, `Overall Score` < 3.0) %>%
  arrange(`Overall Score`) %>%
  head(10)

kable(company_low,
      caption = "Organizations with Development Opportunities (Overall Score < 3.0, ≥2 respondents)",
      digits = 2,
      col.names = c("Company", "n", "Overall", "Focus Area", "Score"),
      booktabs = TRUE,
      linesep = "") %>%
  kable_styling(latex_options = c("striped", "hold_position"),
                font_size = 9,
                full_width = FALSE) %>%
  column_spec(1, width = "5cm") %>%
  column_spec(2, width = "1cm") %>%
  column_spec(3:5, width = "2cm") %>%
  row_spec(0, bold = TRUE, color = "white", background = "#e74c3c")
```

\newpage

# Engagement & Participation

```{r participation-analysis, fig.width=10, fig.height=6}
# Company participation levels
participation <- df %>%
  group_by(company_name) %>%
  summarise(Respondents = n()) %>%
  arrange(desc(Respondents))

# Categorize participation
participation$Category <- cut(participation$Respondents,
                              breaks = c(0, 1, 3, 5, 10, Inf),
                              labels = c("1", "2-3", "4-5", "6-10", "10+"),
                              include.lowest = TRUE)

participation_summary <- as.data.frame(table(participation$Category))
colnames(participation_summary) <- c("Respondents", "Companies")

ggplot(participation_summary, aes(x = Respondents, y = Companies, fill = Respondents)) +
  geom_bar(stat = "identity", color = "white", size = 0.8) +
  geom_text(aes(label = Companies), vjust = -0.3, fontface = "bold", size = 5) +
  scale_fill_brewer(palette = "Blues") +
  labs(
    title = "Company Engagement Levels",
    subtitle = "Number of companies by respondent count",
    x = "Number of Respondents per Company",
    y = "Number of Companies"
  ) +
  theme_resilience() +
  theme(legend.position = "none")
```

## Most Engaged Organizations

```{r top-engagement}
top_engaged <- participation %>%
  select(company_name, Respondents) %>%
  head(15)

kable(top_engaged,
      caption = "Top 15 Organizations by Participation",
      col.names = c("Company", "Respondents"),
      booktabs = TRUE,
      linesep = "") %>%
  kable_styling(latex_options = c("striped", "hold_position"),
                font_size = 10,
                full_width = FALSE) %>%
  column_spec(1, width = "8cm") %>%
  column_spec(2, width = "3cm") %>%
  row_spec(0, bold = TRUE, color = "white", background = "#4CAF50")
```

\newpage

# Strategic Recommendations

Based on the comprehensive analysis of `r total_respondents` responses across `r total_companies` organizations, we recommend the following strategic actions:

## For High Performers (Score ≥ 4.0)

1. **Share Best Practices**: Leverage your resilience maturity to mentor organizations in development
2. **Continuous Innovation**: Explore emerging technologies (AI, blockchain) for further resilience enhancement
3. **Scenario Planning**: Test resilience against increasingly complex disruption scenarios

## For Average Performers (Score 2.5-3.5)

1. **Focus on Weakest Pillar**: Prioritize investments in your lowest-scoring pillar (`r weakest_pillar`)
2. **Benchmarking**: Compare performance with industry leaders to identify specific improvement areas
3. **Quick Wins**: Implement visibility and collaboration tools for immediate impact

## For Organizations Requiring Attention (Score < 2.5)

1. **Resilience Audit**: Conduct comprehensive assessment of current capabilities
2. **Leadership Commitment**: Secure executive sponsorship for resilience initiatives
3. **Foundational Improvements**: Start with basic redundancy and visibility improvements

## Industry-Wide Priorities

```{r industry-priorities, results='asis'}
# Find weakest dimensions overall
all_dims <- c(
  "Upstream Redundancy" = mean(df$up__r, na.rm = TRUE),
  "Upstream Collaboration" = mean(df$up__c, na.rm = TRUE),
  "Upstream Flexibility" = mean(df$up__f, na.rm = TRUE),
  "Upstream Visibility" = mean(df$up__v, na.rm = TRUE),
  "Upstream Agility" = mean(df$up__a, na.rm = TRUE),
  "Internal Redundancy" = mean(df$in__r, na.rm = TRUE),
  "Internal Collaboration" = mean(df$in__c, na.rm = TRUE),
  "Internal Flexibility" = mean(df$in__f, na.rm = TRUE),
  "Internal Visibility" = mean(df$in__v, na.rm = TRUE),
  "Internal Agility" = mean(df$in__a, na.rm = TRUE),
  "Downstream Redundancy" = mean(df$do__r, na.rm = TRUE),
  "Downstream Collaboration" = mean(df$do__c, na.rm = TRUE),
  "Downstream Flexibility" = mean(df$do__f, na.rm = TRUE),
  "Downstream Visibility" = mean(df$do__v, na.rm = TRUE),
  "Downstream Agility" = mean(df$do__a, na.rm = TRUE)
)

weakest_3 <- sort(all_dims)[1:3]

cat("**Top 3 Industry-Wide Development Areas:**\n\n")
for (i in 1:3) {
  cat(sprintf("%d. **%s** (%.2f/5.00)\n", i, names(weakest_3)[i], weakest_3[i]))
}
```

# Conclusion

The ResilienceScan data reveals a maturing understanding of supply chain resilience across the industry, with an average score of **`r sprintf("%.2f", avg_overall_score)`/5.00**. While `r high_pct`% of organizations demonstrate strong resilience capabilities, there remains significant opportunity for improvement, particularly in `r weakest_pillar` resilience.

The high engagement from organizations like **The Coca-Cola Company** (30 respondents), **Scania Logistics NL** (13 respondents), and **Royal Koopmans** (12 respondents) demonstrates the growing recognition of resilience as a strategic imperative.

**Next Steps:**

- Continue expanding the ResilienceScan dataset with diverse industry participants
- Develop sector-specific benchmarking capabilities
- Create targeted intervention programs for organizations in development stages
- Establish resilience maturity frameworks based on longitudinal data

---

::: {.content-visible when-format="pdf"}
\vspace{1cm}
\begin{center}
\textit{This dashboard was generated from ResilienceScan assessment data}\\
\textit{For more information: https://resiliencescan.org/}\\[0.5cm]
\includegraphics[width=0.15\textwidth]{img/logo-resiliencescan.png}
\end{center}
:::
